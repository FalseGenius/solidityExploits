// SPDX-License-Identifier: MIT

pragma solidity ^0.8.18;

contract Reentrancy {

    error Reentrancy__ValueCannotBeZero();
    error Reentrancy__WithdrawalUnsuccessful();

    address private owner;
    mapping(address => uint256) public userBalances;

    constructor() {
        owner = msg.sender;
    }

    function deposit() public payable {
        if (msg.value <= 0) revert Reentrancy__ValueCannotBeZero();
        userBalances[msg.sender] += msg.value;
    }

    function withdraw() external {
        uint256 value = userBalances[msg.sender];
        (bool success,) = payable(msg.sender).call{value:value}("");
        userBalances[msg.sender] = 0;
        if (!success) revert Reentrancy__WithdrawalUnsuccessful();
    }

    function getBalance(address user) public view returns (uint256) {
        return userBalances[user];
    }


}